//https://leetcode-cn.com/problems/longest-valid-parentheses/
//对字符串遍历，进行括弧有效性验证，记录最大的有效长度。同样的方式，倒序再来一次，取最大值。时间复杂度 2*s.length
class Solution {
    public int longestValidParentheses(String s) {
        char[] chars=s.toCharArray();
        return Math.max(calc(chars,0,1,chars.length,'('),calc(chars,chars.length-1,-1,-1,')'));
    }
    public static int calc(char[] chars,int i,int flag,int end,char cTem){
        int max=0,sum=0,currLen=0,validLen=0;
        for(;i!=end;i+=flag){
            sum+=(chars[i]==cTem?1:-1);
            currLen++;
            if(sum<0){
                max=max>validLen?max:validLen;
                sum=0;
                currLen=0;
                validLen=0;
            }
            else if(sum==0){
                validLen=currLen;
            }
        }
        return max>validLen?max:validLen;
    }
}
