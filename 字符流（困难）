//https://leetcode-cn.com/problems/stream-of-characters/
class StreamChecker {
    private class TrieNode {
        TrieNode[] child = new TrieNode[26];
        boolean isMatch = false;
    }

    private List<TrieNode> trieNodes = new ArrayList<>(10000);

    /**
     * Inserts a word into the trie.
     */
    public void insert(String word) {
        TrieNode u = trieNodes.get(0);
        int n = word.length();
        for (int i = n-1; i >= 0; --i) {
            int c = word.charAt(i) - 'a';
            if (u.child[c] == null) {
                TrieNode node = new TrieNode();
                trieNodes.add(node);
                u.child[c] = node;
            }
            u = u.child[c];
        }
        u.isMatch = true;
    }

    /**
     * Returns if the word is in the trie.
     */
    public boolean search() {
        TrieNode u = trieNodes.get(0);
        int n = queries.size();
        for (int i = n-1; i >= 0; --i) {
            int c = queries.get(i) - 'a';
            if (u.child[c] == null) {
                return false;
            }
            u = u.child[c];
            if (u.isMatch) {
                return true;
            }
        }
        return false;
    }
    
    private List<Character> queries = new ArrayList<>(10000);
    public StreamChecker(String[] words) {
        trieNodes.add(new TrieNode());
        for (String s : words) {
            this.insert(s);
        }
    }
    
    public boolean query(char letter) {
        queries.add(letter);
        return this.search();
    }
}
