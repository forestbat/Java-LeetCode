//https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/
class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums==null || nums.length==0)
            return new int[]{-1,-1};
        int one = findFirst(nums, target);
        int two = findLast(nums, target);
        if (one != -1 && two != -1) {
            return new int[]{one, two};
        }
        return new int[]{-1, -1};
    }
    
    public int findFirst(int[] nums,int num){
        int low=0;
        int high=nums.length-1;
        int mid=0;
        while(low<=high){
            mid=low+((high-low)>>>1);
            if(nums[mid]>num)
                high=mid-1;
            else if(nums[mid]<num)
                low=mid+1;
            else if(mid-1>=low && nums[mid-1]==num)
                high=mid-1;
            else return mid;
        }
        return -1;
    }
    
    public int findLast(int[] nums,int num){
        int low=0;
        int high=nums.length-1;
        int mid=0;
        while(low<=high){
            mid=low+((high-low)>>>1);
            if(nums[mid]>num)
                high=mid-1;
            else if(nums[mid]<num)
                low=mid+1;
            else if(mid+1<=high && nums[mid+1]==num)
                low=mid+1;
            else return mid;
        }
        return -1;
    }
}
